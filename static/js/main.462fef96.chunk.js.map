{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","key","SearchBox","placeholder","handleChange","type","onChange","App","state","searchfield","bind","e","this","setState","target","value","fetch","then","response","json","users","filterMonsters","filter","toLowerCase","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qTAEaA,G,YAAO,SAACC,GAAD,OAChB,yBAAKC,UAAU,kBACX,yBAAKC,IAAI,WAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,4BAAKL,EAAMI,QAAQE,MACnB,2BAAIN,EAAMI,QAAQG,UCHbC,EAAU,SAAAR,GACvB,OAAO,yBAAKC,UAAU,aAClBD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,kBAAC,EAAD,CAAMC,GAAID,EAAQC,GAAGM,IAAKP,EAAQC,GAAID,QAASA,SCHzCQ,G,kBAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAClB,2BAAOb,UAAU,aAAYc,KAAK,SAASF,YAAaA,EAAYG,SAAUF,MCsCpEG,E,kDApCX,aAAc,IAAD,8BACT,gBACKC,MAAM,CACPT,SAAS,GACTU,YAAY,IAEhB,EAAKL,aAAa,EAAKA,aAAaM,KAAlB,gBANT,E,yDAQAC,GAETC,KAAKC,SAAS,CACVJ,YAAYE,EAAEG,OAAOC,U,0CAGT,IAAD,OACfC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAE,EAAKP,SAAS,CACvDd,SAASqB,S,+BAGR,IAAD,EAC2BR,KAAKJ,MAA7BT,EADH,EACGA,SAASU,EADZ,EACYA,YACVY,EAAetB,EAASuB,QAAO,SAAA5B,GAAO,OACxCA,EAAQE,KAAK2B,cAAcC,SAASf,EAAYc,kBAEpD,OAEI,yBAAKhC,UAAU,OACX,gDACA,kBAAC,EAAD,CAAWY,YAAY,iBAAgBC,aAAcQ,KAAKR,eAC1D,kBAAC,EAAD,CAAUL,SAAUsB,S,GA/BlBI,IAAMC,WCDxBC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.462fef96.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\nexport const Card = (props)=>(\r\n    <div className=\"card-container\">\r\n        <img alt=\"monsters\"src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n   \r\n)","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\nexport const CardList= props =>{\r\nreturn <div className=\"card-list\">{\r\n    props.monsters.map(monster=>(\r\n       <Card id={monster.id}key={monster.id} monster={monster}/>\r\n    ))\r\n}</div>\r\n};","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox=({placeholder,handleChange})=>(\r\n     <input className=\"search-box\"type=\"search\" placeholder={placeholder}onChange={handleChange}/>\r\n)\r\n","import React from 'react';\r\nimport {CardList} from './component/card-list/card-list.component';\r\nimport './index.css'\r\nimport './App.css'\r\nimport {SearchBox} from './component/search-box/search-box.component';\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            monsters:[],\r\n            searchfield:''\r\n        };\r\n        this.handleChange=this.handleChange.bind(this);\r\n    }\r\n    handleChange(e)\r\n    {\r\n        this.setState({\r\n            searchfield:e.target.value\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        fetch('https:\\\\jsonplaceholder.typicode.com/users')\r\n        .then(response=>response.json()).then(users=>this.setState({\r\n            monsters:users\r\n        }));\r\n    }\r\n    render(){\r\n        const {monsters,searchfield} = this.state;\r\n        const filterMonsters=monsters.filter(monster=>\r\n            monster.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        );\r\n        return(\r\n            \r\n            <div className=\"App\">\r\n                <h1>Monsters Rolodex</h1>\r\n                <SearchBox placeholder=\"Search Monster\"handleChange={this.handleChange}/>\r\n                <CardList monsters={filterMonsters}/>\r\n   \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('app'));\r\n\r\n"],"sourceRoot":""}